(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{538:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("span",{staticStyle:{"background-color":"#ffffff",color:"#333333"}},[s._v("        ")]),t("a",{attrs:{href:"https://github.com/streamxhub/streamx",target:"_blank"}},[s._v("StreamX")]),t("span",{staticStyle:{"background-color":"#ffffff",color:"#333333"}},[s._v(" ")]),s._v("遵循 Apache-2.0 开源协议，将会是个长期更新的活跃项目，欢迎大家提交"),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/pulls"}},[s._v("PR")]),s._v(" 或 "),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/issues/new/choose"}},[s._v("Issue")]),s._v("。喜欢请给个 "),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/stargazers"}},[s._v("Star")]),s._v("。您的支持是我们最大的动力， 该项目从开源以来受到不少朋友的关注和认可，表示感谢，已陆续有来自金融，数据分析，车联网，智能广告，地产等公司的朋友在使用或二开，也不乏来自一线大厂的朋友在研究使用，欢迎更多的开发者加入一块贡献，不只是代码的贡献，还寻求使用文档，体验报告，问答等方面的贡献")]),s._v(" "),t("p",[s._v("StreamX 总体组件栈架构如下， 由 streamx-core 和 streamx-console 两个大的部分组成，其中 streamx-core 是开发时框架，这里不做讲解，本章节具体讲讲如何在本地搭建 streamx-console 流批一体平台的开发环境，为了方便讲解，本文中所说的 "),t("code",[s._v("streamx-console")]),s._v(" 均指 "),t("code",[s._v("streamx-console 平台")])]),s._v(" "),t("center",[t("img",{attrs:{src:"http://assets.streamxhub.com/streamx1.png"}}),t("br")]),s._v(" "),t("p",[s._v("StreamX Console 从 1.2.0 开始实现了 Flink-Runtime 的解耦，即"),t("strong",[s._v("不强制依赖 Hadoop 或 Kubernetes 环境")]),s._v("，可以根据实际开发/使用需求自行安装 Hadoop 或 Kubernetes。")]),s._v(" "),t("br"),s._v(" "),t("h2",{attrs:{id:"安装-hadoop-可选-yarn-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-hadoop-可选-yarn-runtime"}},[s._v("#")]),s._v(" 安装 Hadoop（可选，YARN Runtime）")]),s._v(" "),t("p",[s._v("关于 hadoop 环境有两种方式解决，"),t("code",[s._v("本地安装 hadoop 环境")]),s._v(" 和 "),t("code",[s._v("使用已有的 hadoop 环境")]),s._v(",不论是本地安装 hadoop 环境还是使用已有的 hadoop 环境，都需要确保以下条件")]),s._v(" "),t("ul",[t("li",[s._v("安装并且配置好 "),t("code",[s._v("hadoop")]),s._v(","),t("code",[s._v("yarn")])]),s._v(" "),t("li",[s._v("已配置 "),t("code",[s._v("HADOOP_HOME")]),s._v(" 和 "),t("code",[s._v("HADOOP_CONF_DIR")])]),s._v(" "),t("li",[s._v("已成功启动 "),t("code",[s._v("hadoop")]),s._v(" 和 "),t("code",[s._v("yarn")])])]),s._v(" "),t("h3",{attrs:{id:"本地安装-hadoop-环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地安装-hadoop-环境"}},[s._v("#")]),s._v(" 本地安装 Hadoop 环境")]),s._v(" "),t("p",[s._v("关于如何在本地安装 Hadoop 环境可自行查阅相关资料，这里不作过多讲解。")]),s._v(" "),t("h3",{attrs:{id:"使用已有-hadoop-集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用已有-hadoop-集群"}},[s._v("#")]),s._v(" 使用已有 Hadoop 集群")]),s._v(" "),t("p",[s._v("推荐使用已有的 Hadoop 集群 ( 测试环境 ) ,如使用已有 hadoop 集群需要将以下配置 copy 到开发机器")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("core-site.xml")]),s._v(", "),t("code",[s._v("hdfs-site.xml")]),s._v(", "),t("code",[s._v("yarn-site.xml")]),s._v(" 这三个配置文件 copy 到开发机器")]),s._v(" "),t("li",[s._v("如果开启了 kerberos 认证，需要将 "),t("code",[s._v("keytab")]),s._v(" 文件和 "),t("code",[s._v("krb5.conf")]),s._v(" copy 到开发机器")])]),s._v(" "),t("p",[s._v("需要注意的是，"),t("code",[s._v("core-site.xml")]),s._v(", "),t("code",[s._v("hdfs-site.xml")]),s._v(", "),t("code",[s._v("yarn-site.xml")]),s._v(" 这些配置文件里的一系列主机地址 ( host ) 需要在当前的开发机器上配置出来，需要确保本机可以连接集群里的机器。")]),s._v(" "),t("h2",{attrs:{id:"安装-kubernetes-可选-k8s-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-kubernetes-可选-k8s-runtime"}},[s._v("#")]),s._v(" 安装 Kubernetes （可选，K8s Runtime）")]),s._v(" "),t("p",[s._v("本地开发可以通过 MiniKube 或 KubeSphere 等项目快速安装 Kubernetes 环境，当然选择现有的 K8s Cluster 设施更加推荐。此外按时计费的腾讯云 TKE / 阿里云 ACK 也是快速开发很好的选择。")]),s._v(" "),t("p",[s._v("额外配置需求请参考： "),t("RouterLink",{attrs:{to:"/doc/flink-k8s/1-deployment.html"}},[t("strong",[s._v("StreamX Flink-K8s 集成支持")])])],1),s._v(" "),t("h2",{attrs:{id:"安装-flink-可选-standalone-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-flink-可选-standalone-runtime"}},[s._v("#")]),s._v(" 安装 Flink（可选，Standalone Runtime）")]),s._v(" "),t("p",[s._v("从官网下载 Flink,并且启动测试，配置 FLINK_HOME")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.bfsu.edu.cn/apache/flink/flink-1.13.1/flink-1.13.1-bin-scala_2.11.tgz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xzf flink-1.13.1-bin-scala_2.11.tgz /opt/\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/flink-1.13.1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("启动本地 Flink 群集，可以检查下 flink 是否正常启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./bin/start-cluster.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"安装-maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-maven"}},[s._v("#")]),s._v(" 安装 Maven")]),s._v(" "),t("p",[s._v("最新的 Maven 下载地址："),t("code",[s._v("http://maven.apache.org/download.cgi")]),s._v("，我们创建一个连接，以便 mvn 可以在任何地方运行。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.bfsu.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzvf apache-maven-3.8.1-bin.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /root/apache-maven-3.8.1/bin/mvn /usr/bin/mvn\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"安装-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-mysql"}},[s._v("#")]),s._v(" 安装 MySQL")]),s._v(" "),t("p",[t("code",[s._v("console")]),s._v(" 用到了 MySQL,因此需要准备 MySQL 环境，你可以本地安装 MySQL,也可以直接使用已有的 MySQL,关于 MySQL 的安装配置，请自行查阅资料，这里不作过多讲解")]),s._v(" "),t("h2",{attrs:{id:"安装-nodejs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-nodejs"}},[s._v("#")]),s._v(" 安装 Nodejs")]),s._v(" "),t("p",[t("code",[s._v("console")]),s._v(" 前端部分采用 nodejs 开发，需要 nodejs 环境，下载安装最新的 nodejs 即可")]),s._v(" "),t("h2",{attrs:{id:"安装配置-streamx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装配置-streamx"}},[s._v("#")]),s._v(" 安装配置 StreamX")]),s._v(" "),t("p",[s._v("如果以上准备工作都已经就绪，此时就可以安装配置 "),t("code",[s._v("streamx-console")]),s._v(" 了，"),t("code",[s._v("streamx-console")]),s._v(" 是前后端分离的项目，在项目最终打包部署时为了方便快捷，减少用户的使用和学习成本，使用了前后端混合打包部署模式，但在开发阶段建议使用前后端分离模式进行开发调试，具体步骤如下")]),s._v(" "),t("h3",{attrs:{id:"后端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端"}},[s._v("#")]),s._v(" 后端")]),s._v(" "),t("p",[t("code",[s._v("streamx-console")]),s._v(" 后端采用 springBoot + Mybatis 开发， JWT 权限验证，非常常见的后端技术栈。下面来看看后端按照部署具体流程")]),s._v(" "),t("h4",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),t("p",[s._v("首先将 "),t("code",[s._v("StreamX")]),s._v(" 工程下载到本地并且编译")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/streamxhub/streamx.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx\nmvn clean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -DskipTests -Denv"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("prod\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"解包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解包"}},[s._v("#")]),s._v(" 解包")]),s._v(" "),t("p",[s._v("安装完成之后就看到最终的工程文件解包，位于 "),t("code",[s._v("streamx/streamx-console/streamx-console-service/target/streamx-console-service-${version}-bin.tar.gz")]),s._v(",解包之后的目录如下:")]),s._v(" "),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".\nstreamx-console-service-${version}\n├── bin\n│    ├── flame-graph\n│    ├──   └── *.py\n│    ├── startup.sh\n│    ├── setclasspath.sh\n│    ├── shutdown.sh\n│    ├── yaml.sh\n├── conf\n│    ├── application.yaml\n│    ├── application-prod.yml\n│    ├── flink-application.template\n│    ├── logback-spring.xml\n│    └── ...\n├── lib\n│    └── *.jar\n├── plugins\n│    ├── streamx-jvm-profiler-1.0.0.jar\n│    └── streamx-flink-sqlclient-1.0.0.jar\n├── logs\n├── temp\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("将解包后的整个工程文件 copy 到 target 之外的其他任意位置即可完成此步骤，该步主要是防止下次执行 mvn clean 被清理，如放到 "),t("code",[s._v("/opt/streamx/")]),s._v(",则此时该文件的完整路径是 "),t("code",[s._v("/opt/streamx/streamx-console-service-${version}")]),s._v(",记住这个路径，后面会用到")]),s._v(" "),t("h4",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("p",[s._v("用 IDE 导入刚从 git 上 clone 下来的 StreamX 源码 ( 推荐使用 "),t("code",[s._v("IntelliJ IDEA")]),s._v(" ) ,进入到 "),t("code",[s._v("resources")]),s._v(" 下，编辑 application-prod.xml,找到 "),t("code",[s._v("datasource")]),s._v(",修改下 jdbc 的连接信息，具体可参考安装部署章节 "),t("a",{attrs:{href:"http://www.streamxhub.com/zh/doc/console/deploy/#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("修改配置"),t("OutboundLink")],1),s._v(" 部分")]),s._v(" "),t("img",{attrs:{src:"http://assets.streamxhub.com/131861625472901_.pic_hd.jpg"}}),s._v(" "),t("p",[s._v("如果你要连接的目标集群开启了 kerberos 认证，则需要配置 kerberos 信息，在 "),t("code",[s._v("resources")]),s._v(" 下找到 "),t("code",[s._v("kerberos.xml")]),s._v(" 配置上相关信息即可，默认 kerberos 是关闭状态，要启用需将 "),t("code",[s._v("enable")]),s._v(" 设置为 true, 如下:")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("security")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kerberos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("login")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("enable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("principal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("krb5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("keytab")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("java")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("security")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("krb5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("conf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("p",[t("code",[s._v("streamx-console")]),s._v(" 是基于 springBoot 开发的 web 应用，"),t("code",[s._v("com.streamxhub.streamx.console.StreamXConsole")]),s._v(" 为主类， 在启动主类之前，需要设置下 "),t("code",[s._v("VM options")]),s._v(" 和 "),t("code",[s._v("Environment variables")])]),s._v(" "),t("h5",{attrs:{id:"vm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vm-options"}},[s._v("#")]),s._v(" VM options")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("VM options")]),s._v(" 需要设置 "),t("code",[s._v("app.home")]),s._v(":值为上面解包后的 streamx-console 的完整路径:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-Dapp.home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/streamx/streamx-console-service-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${version}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("br"),t("br"),s._v("\n如果开发机使用的 jdk 版本是 jdk1.8 以上版本， 则需要加上如下参数: "),t("br")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("opens java.base/jdk.internal.loader=ALL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("UNNAMED "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("opens jdk.zipfs/jdk.nio.zipfs=ALL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("UNNAMED\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"environment-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[s._v("#")]),s._v(" Environment variables")]),s._v(" "),t("p",[s._v("如使用非本地安装的 hadoop 集群 ( 测试 hadoop ) "),t("code",[s._v("Environment variables")]),s._v(" 中需要配置 "),t("code",[s._v("HADOOP_USER_NAME")]),s._v(" 和 "),t("code",[s._v("HADOOP_CONF_DIR")]),s._v(",\n"),t("code",[s._v("HADOOP_USER_NAME")]),s._v(" 为 hdfs 或者有读写权限的 hadoop 用户名，"),t("code",[s._v("HADOOP_CONF_DIR")]),s._v(" 为上面第一步安装 hadoop 步骤中从测试集群 copy 相关配置文件在开发机器上的存放位置，如果是本地安装的 hadoop 则不需要配置该项，")]),s._v(" "),t("img",{attrs:{src:"http://assets.streamxhub.com/131891625474138_.pic_hd.jpg"}}),s._v(" "),t("p",[s._v("如果一切准假就绪，就可以直接启动 "),t("code",[s._v("StreamXConsole")]),s._v(" 主类启动项目，后端就启动成功了。会看到有相关的启动信息打印输出")]),s._v(" "),t("h3",{attrs:{id:"前端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[s._v("#")]),s._v(" 前端")]),s._v(" "),t("p",[s._v("streamx web 前端部分采用 nodejs + vue 开发，因此需要在机器上按照 node 环境，完整流程如下:")]),s._v(" "),t("h4",{attrs:{id:"修改请求-url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改请求-url"}},[s._v("#")]),s._v(" 修改请求 URL")]),s._v(" "),t("p",[s._v("由于是前后端分离项目，前端需要知道后端 ( streamx-console ) 的访问地址，才能前后配合工作，因此需要后端的 URL,具体位置在:\n"),t("code",[s._v("streamx-console/streamx-console-webapp/src/api/baseUrl.js")])]),s._v(" "),t("p",[s._v("配置默认如下:")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("baseUrl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//混合打包 ( production,不用配置，maven 编译项目阶段-Denv=prod 自动将环境参数透传到这里 )")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("protocol "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'//'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//开发测试阶段采用前后端分离，这里配置后端的请求 URI")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'development'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://localhost:10000'")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" url\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("将 "),t("code",[s._v("development")]),s._v(" 下的 URL 连接改为后端的 URI 即可")]),s._v(" "),t("h4",{attrs:{id:"编译项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译项目"}},[s._v("#")]),s._v(" 编译项目")]),s._v(" "),t("p",[s._v("接下来需要编译项目，具体步骤如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx-console/streamx-console-webapp\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"启动项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动项目"}},[s._v("#")]),s._v(" 启动项目")]),s._v(" "),t("p",[s._v("以上步骤执行完毕即可启动项目即可")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx-console/streamx-console-webapp\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])],1)}),[],!1,null,null,null);a.default=n.exports},562:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("span",{staticStyle:{"background-color":"#ffffff",color:"#333333"}},[s._v("        ")]),t("a",{attrs:{href:"https://github.com/streamxhub/streamx",target:"_blank"}},[s._v("StreamX")]),t("span",{staticStyle:{"background-color":"#ffffff",color:"#333333"}},[s._v(" ")]),s._v("遵循 Apache-2.0 开源协议，将会是个长期更新的活跃项目，欢迎大家提交"),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/pulls"}},[s._v("PR")]),s._v(" 或 "),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/issues/new/choose"}},[s._v("Issue")]),s._v("。喜欢请给个 "),t("a",{attrs:{href:"https://github.com/streamxhub/streamx/stargazers"}},[s._v("Star")]),s._v("。您的支持是我们最大的动力， 该项目从开源以来受到不少朋友的关注和认可，表示感谢，已陆续有来自金融，数据分析，车联网，智能广告，地产等公司的朋友在使用或二开，也不乏来自一线大厂的朋友在研究使用，欢迎更多的开发者加入一块贡献，不只是代码的贡献，还寻求使用文档，体验报告，问答等方面的贡献")]),s._v(" "),t("p",[s._v("StreamX 总体组件栈架构如下， 由 streamx-core 和 streamx-console 两个大的部分组成，其中 streamx-core 是开发时框架，这里不做讲解，本章节具体讲讲如何在本地搭建 streamx-console 流批一体平台的开发环境，为了方便讲解，本文中所说的 "),t("code",[s._v("streamx-console")]),s._v(" 均指 "),t("code",[s._v("streamx-console 平台")])]),s._v(" "),t("center",[t("img",{attrs:{src:"http://assets.streamxhub.com/streamx1.png"}}),t("br")]),s._v(" "),t("p",[s._v("StreamX Console 从 1.2.0 开始实现了 Flink-Runtime 的解耦，即"),t("strong",[s._v("不强制依赖 Hadoop 或 Kubernetes 环境")]),s._v("，可以根据实际开发/使用需求自行安装 Hadoop 或 Kubernetes。")]),s._v(" "),t("br"),s._v(" "),t("h2",{attrs:{id:"安装-hadoop-可选-yarn-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-hadoop-可选-yarn-runtime"}},[s._v("#")]),s._v(" 安装 Hadoop（可选，YARN Runtime）")]),s._v(" "),t("p",[s._v("关于 hadoop 环境有两种方式解决，"),t("code",[s._v("本地安装 hadoop 环境")]),s._v(" 和 "),t("code",[s._v("使用已有的 hadoop 环境")]),s._v(",不论是本地安装 hadoop 环境还是使用已有的 hadoop 环境，都需要确保以下条件")]),s._v(" "),t("ul",[t("li",[s._v("安装并且配置好 "),t("code",[s._v("hadoop")]),s._v(","),t("code",[s._v("yarn")])]),s._v(" "),t("li",[s._v("已配置 "),t("code",[s._v("HADOOP_HOME")]),s._v(" 和 "),t("code",[s._v("HADOOP_CONF_DIR")])]),s._v(" "),t("li",[s._v("已成功启动 "),t("code",[s._v("hadoop")]),s._v(" 和 "),t("code",[s._v("yarn")])])]),s._v(" "),t("h3",{attrs:{id:"本地安装-hadoop-环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地安装-hadoop-环境"}},[s._v("#")]),s._v(" 本地安装 Hadoop 环境")]),s._v(" "),t("p",[s._v("关于如何在本地安装 Hadoop 环境可自行查阅相关资料，这里不作过多讲解。")]),s._v(" "),t("h3",{attrs:{id:"使用已有-hadoop-集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用已有-hadoop-集群"}},[s._v("#")]),s._v(" 使用已有 Hadoop 集群")]),s._v(" "),t("p",[s._v("推荐使用已有的 Hadoop 集群 ( 测试环境 ) ,如使用已有 hadoop 集群需要将以下配置 copy 到开发机器")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("core-site.xml")]),s._v(", "),t("code",[s._v("hdfs-site.xml")]),s._v(", "),t("code",[s._v("yarn-site.xml")]),s._v(" 这三个配置文件 copy 到开发机器")]),s._v(" "),t("li",[s._v("如果开启了 kerberos 认证，需要将 "),t("code",[s._v("keytab")]),s._v(" 文件和 "),t("code",[s._v("krb5.conf")]),s._v(" copy 到开发机器")])]),s._v(" "),t("p",[s._v("需要注意的是，"),t("code",[s._v("core-site.xml")]),s._v(", "),t("code",[s._v("hdfs-site.xml")]),s._v(", "),t("code",[s._v("yarn-site.xml")]),s._v(" 这些配置文件里的一系列主机地址 ( host ) 需要在当前的开发机器上配置出来，需要确保本机可以连接集群里的机器。")]),s._v(" "),t("h2",{attrs:{id:"安装-kubernetes-可选-k8s-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-kubernetes-可选-k8s-runtime"}},[s._v("#")]),s._v(" 安装 Kubernetes （可选，K8s Runtime）")]),s._v(" "),t("p",[s._v("本地开发可以通过 MiniKube 或 KubeSphere 等项目快速安装 Kubernetes 环境，当然选择现有的 K8s Cluster 设施更加推荐。此外按时计费的腾讯云 TKE / 阿里云 ACK 也是快速开发很好的选择。")]),s._v(" "),t("p",[s._v("额外配置需求请参考： "),t("RouterLink",{attrs:{to:"/zh/doc/flink-k8s/1-deployment.html"}},[t("strong",[s._v("StreamX Flink-K8s 集成支持")])])],1),s._v(" "),t("h2",{attrs:{id:"安装-flink-可选-standalone-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-flink-可选-standalone-runtime"}},[s._v("#")]),s._v(" 安装 Flink（可选，Standalone Runtime）")]),s._v(" "),t("p",[s._v("从官网下载 Flink,并且启动测试，配置 FLINK_HOME")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.bfsu.edu.cn/apache/flink/flink-1.13.1/flink-1.13.1-bin-scala_2.11.tgz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xzf flink-1.13.1-bin-scala_2.11.tgz /opt/\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/flink-1.13.1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("启动本地 Flink 群集，可以检查下 flink 是否正常启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./bin/start-cluster.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"安装-maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-maven"}},[s._v("#")]),s._v(" 安装 Maven")]),s._v(" "),t("p",[s._v("最新的 Maven 下载地址："),t("code",[s._v("http://maven.apache.org/download.cgi")]),s._v("，我们创建一个连接，以便 mvn 可以在任何地方运行。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.bfsu.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzvf apache-maven-3.8.1-bin.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /root/apache-maven-3.8.1/bin/mvn /usr/bin/mvn\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"安装-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-mysql"}},[s._v("#")]),s._v(" 安装 MySQL")]),s._v(" "),t("p",[t("code",[s._v("console")]),s._v(" 用到了 MySQL,因此需要准备 MySQL 环境，你可以本地安装 MySQL,也可以直接使用已有的 MySQL,关于 MySQL 的安装配置，请自行查阅资料，这里不作过多讲解")]),s._v(" "),t("h2",{attrs:{id:"安装-nodejs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-nodejs"}},[s._v("#")]),s._v(" 安装 Nodejs")]),s._v(" "),t("p",[t("code",[s._v("console")]),s._v(" 前端部分采用 nodejs 开发，需要 nodejs 环境，下载安装最新的 nodejs 即可")]),s._v(" "),t("h2",{attrs:{id:"安装配置-streamx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装配置-streamx"}},[s._v("#")]),s._v(" 安装配置 StreamX")]),s._v(" "),t("p",[s._v("如果以上准备工作都已经就绪，此时就可以安装配置 "),t("code",[s._v("streamx-console")]),s._v(" 了，"),t("code",[s._v("streamx-console")]),s._v(" 是前后端分离的项目，在项目最终打包部署时为了方便快捷，减少用户的使用和学习成本，使用了前后端混合打包部署模式，但在开发阶段建议使用前后端分离模式进行开发调试，具体步骤如下")]),s._v(" "),t("h3",{attrs:{id:"后端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端"}},[s._v("#")]),s._v(" 后端")]),s._v(" "),t("p",[t("code",[s._v("streamx-console")]),s._v(" 后端采用 springBoot + Mybatis 开发， JWT 权限验证，非常常见的后端技术栈。下面来看看后端按照部署具体流程")]),s._v(" "),t("h4",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),t("p",[s._v("首先将 "),t("code",[s._v("StreamX")]),s._v(" 工程下载到本地并且编译")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/streamxhub/streamx.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx\nmvn clean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -DskipTests -Denv"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("prod\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"解包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解包"}},[s._v("#")]),s._v(" 解包")]),s._v(" "),t("p",[s._v("安装完成之后就看到最终的工程文件解包，位于 "),t("code",[s._v("streamx/streamx-console/streamx-console-service/target/streamx-console-service-${version}-bin.tar.gz")]),s._v(",解包之后的目录如下:")]),s._v(" "),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".\nstreamx-console-service-${version}\n├── bin\n│    ├── flame-graph\n│    ├──   └── *.py\n│    ├── startup.sh\n│    ├── setclasspath.sh\n│    ├── shutdown.sh\n│    ├── yaml.sh\n├── conf\n│    ├── application.yaml\n│    ├── application-prod.yml\n│    ├── flink-application.template\n│    ├── logback-spring.xml\n│    └── ...\n├── lib\n│    └── *.jar\n├── plugins\n│    ├── streamx-jvm-profiler-1.0.0.jar\n│    └── streamx-flink-sqlclient-1.0.0.jar\n├── logs\n├── temp\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("将解包后的整个工程文件 copy 到 target 之外的其他任意位置即可完成此步骤，该步主要是防止下次执行 mvn clean 被清理，如放到 "),t("code",[s._v("/opt/streamx/")]),s._v(",则此时该文件的完整路径是 "),t("code",[s._v("/opt/streamx/streamx-console-service-${version}")]),s._v(",记住这个路径，后面会用到")]),s._v(" "),t("h4",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("p",[s._v("用 IDE 导入刚从 git 上 clone 下来的 StreamX 源码 ( 推荐使用 "),t("code",[s._v("IntelliJ IDEA")]),s._v(" ) ,进入到 "),t("code",[s._v("resources")]),s._v(" 下，编辑 application-prod.xml,找到 "),t("code",[s._v("datasource")]),s._v(",修改下 jdbc 的连接信息，具体可参考安装部署章节 "),t("a",{attrs:{href:"http://www.streamxhub.com/zh/doc/console/deploy/#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("修改配置"),t("OutboundLink")],1),s._v(" 部分")]),s._v(" "),t("img",{attrs:{src:"http://assets.streamxhub.com/131861625472901_.pic_hd.jpg"}}),s._v(" "),t("p",[s._v("如果你要连接的目标集群开启了 kerberos 认证，则需要配置 kerberos 信息，在 "),t("code",[s._v("resources")]),s._v(" 下找到 "),t("code",[s._v("kerberos.xml")]),s._v(" 配置上相关信息即可，默认 kerberos 是关闭状态，要启用需将 "),t("code",[s._v("enable")]),s._v(" 设置为 true, 如下:")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("security")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kerberos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("login")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("enable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("principal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("krb5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("keytab")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("java")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("security")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("krb5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("conf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("p",[t("code",[s._v("streamx-console")]),s._v(" 是基于 springBoot 开发的 web 应用，"),t("code",[s._v("com.streamxhub.streamx.console.StreamXConsole")]),s._v(" 为主类， 在启动主类之前，需要设置下 "),t("code",[s._v("VM options")]),s._v(" 和 "),t("code",[s._v("Environment variables")])]),s._v(" "),t("h5",{attrs:{id:"vm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vm-options"}},[s._v("#")]),s._v(" VM options")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("VM options")]),s._v(" 需要设置 "),t("code",[s._v("app.home")]),s._v(":值为上面解包后的 streamx-console 的完整路径:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-Dapp.home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/streamx/streamx-console-service-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${version}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("br"),t("br"),s._v("\n如果开发机使用的 jdk 版本是 jdk1.8 以上版本， 则需要加上如下参数: "),t("br")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("opens java.base/jdk.internal.loader=ALL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("UNNAMED "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("opens jdk.zipfs/jdk.nio.zipfs=ALL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("UNNAMED\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"environment-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[s._v("#")]),s._v(" Environment variables")]),s._v(" "),t("p",[s._v("如使用非本地安装的 hadoop 集群 ( 测试 hadoop ) "),t("code",[s._v("Environment variables")]),s._v(" 中需要配置 "),t("code",[s._v("HADOOP_USER_NAME")]),s._v(" 和 "),t("code",[s._v("HADOOP_CONF_DIR")]),s._v(",\n"),t("code",[s._v("HADOOP_USER_NAME")]),s._v(" 为 hdfs 或者有读写权限的 hadoop 用户名，"),t("code",[s._v("HADOOP_CONF_DIR")]),s._v(" 为上面第一步安装 hadoop 步骤中从测试集群 copy 相关配置文件在开发机器上的存放位置，如果是本地安装的 hadoop 则不需要配置该项，")]),s._v(" "),t("img",{attrs:{src:"http://assets.streamxhub.com/131891625474138_.pic_hd.jpg"}}),s._v(" "),t("p",[s._v("如果一切准假就绪，就可以直接启动 "),t("code",[s._v("StreamXConsole")]),s._v(" 主类启动项目，后端就启动成功了。会看到有相关的启动信息打印输出")]),s._v(" "),t("h3",{attrs:{id:"前端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[s._v("#")]),s._v(" 前端")]),s._v(" "),t("p",[s._v("streamx web 前端部分采用 nodejs + vue 开发，因此需要在机器上按照 node 环境，完整流程如下:")]),s._v(" "),t("h4",{attrs:{id:"修改请求-url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改请求-url"}},[s._v("#")]),s._v(" 修改请求 URL")]),s._v(" "),t("p",[s._v("由于是前后端分离项目，前端需要知道后端 ( streamx-console ) 的访问地址，才能前后配合工作，因此需要后端的 URL,具体位置在:\n"),t("code",[s._v("streamx-console/streamx-console-webapp/src/api/baseUrl.js")])]),s._v(" "),t("p",[s._v("配置默认如下:")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("baseUrl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//混合打包 ( production,不用配置，maven 编译项目阶段-Denv=prod 自动将环境参数透传到这里 )")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("protocol "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'//'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//开发测试阶段采用前后端分离，这里配置后端的请求 URI")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'development'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://localhost:10000'")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" url\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("将 "),t("code",[s._v("development")]),s._v(" 下的 URL 连接改为后端的 URI 即可")]),s._v(" "),t("h4",{attrs:{id:"编译项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译项目"}},[s._v("#")]),s._v(" 编译项目")]),s._v(" "),t("p",[s._v("接下来需要编译项目，具体步骤如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx-console/streamx-console-webapp\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"启动项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动项目"}},[s._v("#")]),s._v(" 启动项目")]),s._v(" "),t("p",[s._v("以上步骤执行完毕即可启动项目即可")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" streamx-console/streamx-console-webapp\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run serve\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])],1)}),[],!1,null,null,null);a.default=n.exports}}]);